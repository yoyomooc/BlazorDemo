name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - develop

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME_API: webapi
  IMAGE_NAME_APP: webapp
  REGISTRY: ghcr.io

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  build-image:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2
      - name: Checkout repository 仓库变量检查
        run: |
          echo ${{ github.actor }}
          echo  ${{ github.repository }}/$IMAGE_NAME_API
          echo ${{ secrets.PUSH_GITLAB_TO_GITHUB }}

      - uses: actions/checkout@v2
      - name: build-and-tag-push-image 编译镜像、推送镜像
        run: |
          IMAGE_ID=${{ env.REGISTRY }}/${{ github.repository }}
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # 从标签名称中去掉“v”前缀
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          #使用Docker 'latest'标签的约定规则
          [ "$VERSION" == "master" ] && VERSION=latest
          docker build .  --file ./YoyoMooc.StuManagement.Api/Dockerfile --tag $IMAGE_ID/${{env.IMAGE_NAME_API}}:$VERSION
          echo 推送API镜像

          docker push  $IMAGE_ID/${{env.IMAGE_NAME_API}}:$VERSION

          docker build .  --file ./YoyoMooc.StuManagement.Web/Dockerfile --tag $IMAGE_ID/${{env.IMAGE_NAME_APP}}:$VERSION
           echo 推送app镜像
          docker push  $IMAGE_ID/${{env.IMAGE_NAME_APP}}:$VERSION
