name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME_API: webapi
  IMAGE_NAME_APP: webapp
  REGISTRY: ghcr.io

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  build-and-push-image:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2
      - name: Checkout repository 仓库变量检查
        run: |
          echo ${{ github.actor }}
          echo ${{ github.repository }}/$IMAGE_NAME_API
          echo ${{ secrets.PUSH_GITLAB_TO_GITHUB }}
          echo ${{ secrets.AAA_22_DDD }}

      - name: build-and-tag-image 编译镜像、推送镜像
        run: |
          echo 编译镜像api
          docker build .  --file ./YoyoMooc.StuManagement.Api/Dockerfile --tag ${{env.IMAGE_NAME_API}}
          echo 编译镜像app
          docker build .  --file ./YoyoMooc.StuManagement.Web/Dockerfile --tag ${{env.IMAGE_NAME_APP}}

      - name: 登录到容器仓库中
        run: echo "${{ secrets.PUSH_GITLAB_TO_GITHUB }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image 推送镜像
        run: |


          IMAGE_ID=${{ env.REGISTRY }}/${{ github.repository }}
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')


          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # 从标签名称中去掉“v”前缀
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          #使用Docker 'latest'标签的约定规则
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          echo 重命名APP为镜像APP=$IMAGE_ID/${{env.IMAGE_NAME_APP}}:$VERSION
          docker tag  ${{env.IMAGE_NAME_APP}} $IMAGE_ID/${{env.IMAGE_NAME_APP}}:$VERSION
          echo 重命名API为镜像API=$IMAGE_ID/${{env.IMAGE_NAME_API}}:$VERSION
          docker tag  ${{env.IMAGE_NAME_API}} $IMAGE_ID/${{env.IMAGE_NAME_API}}:$VERSION
          docker push $IMAGE_ID/${{env.IMAGE_NAME_APP}}:$VERSION
          docker push $IMAGE_ID/${{env.IMAGE_NAME_API}}:$VERSION
          echo 推送完成，准备开始清理。
